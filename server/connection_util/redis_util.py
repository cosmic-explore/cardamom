import json
from classes.player import Player
from classes.creature import Creature
from classes.match import Match
from classes.board import Board
from classes.command import Command

def match_from_json(json_str):
    """Takes a JSON representation of the dict generated by Match.to_simple_dict()
    and initializes a full Match."""    
    def init_player(player_dict, board):
        if player_dict is None:
            return None
        player = Player(player_dict["name"], id=player_dict["id"])
        player.creatures = [Creature.from_dict(c, board=board) for c in player_dict["creatures"]]
        return player
    
    simple_dict = json.loads(json_str)
    board = Board(simple_dict["board"]["size_x"], simple_dict["board"]["size_y"])
    player_1 = init_player(simple_dict["player_1"], board)
    player_2 = init_player(simple_dict["player_2"], board)
    match = Match(
        board,
        player_1,
        player_2,
        simple_dict["id"],
        simple_dict["turn_number"],
        simple_dict["active"]
    )
    match.history = simple_dict["history"]
    return match

def commands_from_json(json_str, match):
    """Loads commands stored in redis"""
    command_dict_array = json.loads(json_str)
    return [Command.from_dict_and_match(c, match) for c in command_dict_array]
